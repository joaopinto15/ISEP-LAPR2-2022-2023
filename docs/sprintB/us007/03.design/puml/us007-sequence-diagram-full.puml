@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Unregistered User" as UU
participant ":RegisterUserUI" as UI
participant ":RegisterUserController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "usersRepository:\nUsersRepository" as UsersRepository
participant "Auth:AuthFacade"  as AuthFacade
participant "user: User" as U
activate UU

UU -> UI : register in the system
activate UI

UI --> UU : requests data(name, passport card number, tax number\n, address, email,phone number, password)
deactivate UI
note right
            the Address is not mandatory
end note

UU -> UI : types requested data
activate UI

UI -> CTRL : registerUser(name, passport card number, tax number\n, address, email,phone number, password)
activate CTRL

CTRL -> RepositorySingleton : getInstance()
activate RepositorySingleton

    RepositorySingleton --> CTRL: repositories
deactivate RepositorySingleton

CTRL -> PLAT : getUsersRepository()
activate PLAT

PLAT --> CTRL: UsersRepository
deactivate PLAT


CTRL -> UsersRepository : registerUser(name, passport card number, tax number\n, address, email,phone number, password)
activate UsersRepository

UsersRepository-> U** : create(name, passport card number, tax number\n, address, email,phone number, password)
deactivate UsersRepository

CTRL -> UsersRepository : validateregisterUser(user)
activate UsersRepository
deactivate UsersRepository
deactivate CTRL

UI --> UU : shows the data and requests confirmation
deactivate UsersRepository

deactivate UI

UU -> UI : confirms the data
activate UI

UI -> CTRL :saveUser()
activate CTRL

CTRL -> UsersRepository : saveUser(user)
activate UsersRepository

UsersRepository -> UsersRepository : validateUser(user)
activate UsersRepository
deactivate UsersRepository

UsersRepository -> UsersRepository : addUser(user)
activate UsersRepository
deactivate UsersRepository

UI -> CTRL : makeClientAnUserAndSendPassword()


CTRL -> AuthFacade : addUser(String name, String email, String password)
activate AuthFacade
AuthFacade -> AuthFacade : existsUser(String email)
activate AuthFacade
deactivate AuthFacade
deactivate AuthFacade


UI --> UU : informs operation sucess

deactivate UsersRepository
deactivate CTRL
deactivate  UI
deactivate UU


@enduml