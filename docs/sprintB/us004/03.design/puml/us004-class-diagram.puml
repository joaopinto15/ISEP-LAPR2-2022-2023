@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0
'---------File styling---------
skinparam class {
    BackgroundColor PeachPuff
    ArrowColor RoyalBlue
    BorderColor RoyalBlue
}
'left to right direction
'User interface'
class ListingRequestUI {

}
class ListingRequestController {
  +registerUser(name, passport card number, tax number\n, address, email,phone number, password)
  +saveUser()
}
abstract class Property {
    -double areaInM2
    -double distanceFromCityCentre
    -ArrayList <String> photoURL
    -String typeProperty
    -Address Address
    +Property(areaInM2, distanceFromCityCentre, photoURL, typeProperty,
Address, Housing, Deal)
}
abstract class Home{
    -int numberOfBedrooms
    -int numberOfBathrooms
    -int numberOfParkingSpace
    -ArrayList <String> availableEquipment
}
class House{
    - boolean basement
    - boolean inhabitableLoft
    - String sunExposure
}
class Apartement{
    
}
class Land{

}
class Address {
    - String street 
    - String city
    - String state
    - int zipcode
    - String distric
    + setAdress(String street, String city, String state, int zipcode)
    + getAdress(String street, String city, String state, int zipcode) 
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getEmployeeRepository()
    + getPropertyRepository()
    + getPropertyRepository()
    + getAgencyRepository()
    + getUserRepository()
}
class User {

    + User(name, passportnumber, tax number\n, address, email,phone number, password )
}
class UsersRepository{
+registerUser(name, passportnumber, tax number\n, address, email,phone number, password)
+validateUser(user)
+getUser(id)
+saveUser(user)
}
class EmployeeRepository{

}
class PropertyRepository{
    + addRequest()
    + validateRequest()
}
class Employee{
    - Agency agency
    - Person person 
    - Role role
}

class Request {
    - User user
    - Employee Employee
    - Property property
    - Deal deal
    + Request(Employee, property, deal, user)
}
abstract class Deal {
    - enum public DealType
    + Deal(DealType:dealType)
}
class Sale {
    - double propertyPrice
    + createSale(propertyPrice)
}
class Rent{
    - double propertyRent
    - int contractDuration
    + createRent(propertyRent, contractDuration)
}
class Agency{
    - int id 
    - String designation
    - int phoneNumber
    - String email
}
class AgencyRepository{

}
class Person{
    - String name
    - int passportNumber
    - int taxNumber
    - String email
    - int phoneNumber
    - String password
    - Address address
}

'UI
ListingRequestUI ..> ListingRequestController

'Controller
ListingRequestController ..> Repositories : repositories
ListingRequestController ..> Request
'Repositories
Repositories --> Repositories : instance
Repositories --> EmployeeRepository
Repositories --> PropertyRepository
Repositories --> AgencyRepository
Repositories --> UsersRepository

'Users
UsersRepository ..> User
'Agency
AgencyRepository ..> Agency
Agency *-- Address
'Request 
PropertyRepository ..> Request
Request *-- Employee
Request *-- Property
Request *-- Deal
Request *-- User

EmployeeRepository ..> Employee
'Property 
PropertyRepository ..> Property
Property *-- Address
Property <|-- Home
Home <|-- House
Property <|-- Land
Home <|-- Apartement

'Person

Person *-- User
Person *-- Employee
Person --* Address

'Employee
Employee --* Agency
Employee --* Role

'Deal
Deal <|-- Sale
Deal <|-- Rent
@enduml