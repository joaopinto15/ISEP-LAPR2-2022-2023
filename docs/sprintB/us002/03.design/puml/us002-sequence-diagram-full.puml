@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Agent" as A #RosyBrown
participant ":PublishAnnouncementUI" as UI
participant ":PublishAnnouncementController" as CTRL
participant "Announcement" as Announcement
participant "AgentSession" as US
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "propertyOwnerRepository:\nUsersRepository" as UsersRepository

activate A

        A -> UI : asks to publish an announcement
        activate UI

            UI -> CTRL** : create
            UI -> CTRL : isLoggedInWithRole(String roleId)
            CTRL -> US : isLoggedInWithRole(String roleId)
            US -> CTRL : boolean
            UI -> CTRL : getUser()

            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getUsersRepository()
                activate PLAT

                    PLAT --> CTRL: UsersRepository
                deactivate PLAT

                CTRL -> UsersRepository : getUser()
                activate UsersRepository

                    UsersRepository --> CTRL : User
                deactivate UsersRepository

                CTRL --> UI : User
            deactivate CTRL

            UI --> A : requests to select a User
        deactivate UI

        A -> UI : chooses a User
        activate UI

            UI --> A : requests property characteristics (i.e. areaInM2, distanceFromCityCentre)
        deactivate UI

        A -> UI : types respective data
        activate UI

            loop selecting one or more photos

                UI --> A : requests photos (i.e. URI)
        deactivate UI

                A -> UI : types respective data
        activate UI

                UI -> CTRL : createPhotoList(URI)
            end

            UI --> A : requests property address (street,city,district,state,zipcode)
        deactivate UI

        A -> UI : types respective data
        activate UI

            UI --> A : requests type of property
        deactivate UI

        alt Property type is a land

            A -> UI : types respective data
        activate UI

        else Property is an apartment

            A -> UI : types respective data
            UI -->A  : requests characteristics about Housing (number of bedrooms,number of bathrooms,number of parking spaces)
        deactivate UI

        A ->UI  : types respective data
        activate UI

            UI -> CTRL : createHousing(number of bedrooms,number of bathrooms,number of parking spaces)
            loop selects one or more equipment

                UI --> A : request available equipment
        deactivate UI

                 A -> UI : types respective data
        activate UI

            end

        else Property is a house

            A -> UI : types respective data
            UI --> A  : requests characteristics about Housing (number of bedrooms,number of bathrooms,number of parking spaces)
        deactivate UI

            A ->UI  : types respective data
        activate UI

            UI -> CTRL : createHousing(number of bedrooms,number of bathrooms,number of parking spaces)
            UI --> A : requests characteristics about House(existence of a basement, inhabitable loft, sun exposure)
        deactivate UI

            A -> UI : types respective data
        activate UI

            UI -> CTRL : createHouse(existence of a basement, inhabitable loft, sun exposure)
            loop selects one or more equipment

                UI --> A : request available equipment
        deactivate UI

                A -> UI : types respective data
        activate UI

            end

        end
        UI --> A : requests deal

        deactivate UI

        alt Deal is Sale

            A -> UI : types respective data
        activate UI

            UI --> A : requests price
        deactivate UI

            A -> UI : types respective data
        activate UI

            UI -> CTRL : createSale(price)
        else Deal is Rent

            A -> UI : types respective data
            UI --> A : requests rent and contract duration
        deactivate UI

            A -> UI : types respective data
        activate UI

            UI -> CTRL : createRent(rent,contractDuration)
        deactivate UI

        end

        UI -> A : requests commission
        activate UI

            A --> UI : types respective data
        deactivate UI

            UI -> CTRL: createAnnouncement(propertyCharacteristics, deal, commission, photos, User)
            activate CTRL

            CTRL -> AnnouncementRepository**: create(propertyCharacteristics, deal, commission, photos, User)
        activate UI

                CTRL -> CTRL: addAnnouncement(announcement)
                CTRL -> CTRL: validateAnnouncement(announcement)
                CTRL --> UI: announcement
            deactivate CTRL

            UI --> A: shows the announcement and asks to confirm

        deactivate UI

        A -> UI : confirms
        activate UI

            UI --> A : Display operation success
deactivate A
@enduml